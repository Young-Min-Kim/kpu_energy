[
  {
    "categoryName": "Data Visualization",
    "webCategoryId": 1,
    "mobileCategoryId": 2,
    "controlList": [


      {
        "title": "Cartesian Charts",
        "description": "Plot over 30 chart types ranging from line charts to financial charts",
        "image": "images/cartesian_types.png",
        "controlId": 1,
        "subItems": [
          
          {
            "type": "child",
            "title": "Data Source",
            "displayType": "card",
            "subItems": [
              {
                "title": "List",
                "key": "local_list_data",
                "description": "This sample demonstrates plotting the data which is stored as a list.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/data_source/list.dart"
              },
              {
                "title": "JSON",
                "key": "local_json_data",
                "description": "This same demonstrates binding of JSON data to the chart. We saved the JSON data in the file 'chart_data.json' in the assets folder.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/data_source/json.dart"
              }
            ]
          },



          {
            "type": "parent",
            "title": "User Interactions",
            "subItems": [
              {
                "type": "child",
                "title": "Tooltip",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Default tooltip",
                    "key": "default_tooltip",
                    "description": "Tooltip is enabled in this sample and to see the tooltip in action, tap the data points in mobile and hover the data points in the web.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/tooltip/default_tooltip.dart",
                    "sourceLink": "https://www.indexmundi.com/g/g.aspx?v=72&c=gm&c=mx&l=en",
                    "sourceText": "www.indexmundi.com"
                  },
                  {
                    "title": "Tooltip position",
                    "description": "By changing the options, the tooltip can be made to display in the fixed location or at the pointer location itself.",
                    "key": "tooltip_position",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/tooltip/tooltip_position.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Tooltip template",
                    "description": "This example displays a custom widget as the tooltip. To see the tooltip template, tap the data points in mobile and hover the data points in the web.",
                    "key": "tooltip_template",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/tooltip/tooltip_template.dart",
                    "sourceLink": "https://www.broadbandsearch.net/blog/social-media-facts-statistics",
                    "sourceText": "www.broadbandsearch.net"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Zooming and Panning",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "시간별 에너지 사용량 추이",
                    "key": "pinch_zooming",
                    "description": "Pinch zooming and panning is enabled in this sample. Pinch the chart to zoom in and swipe the zoomed chart to pan it. In the web, mouse wheel zooming is also enabled.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/zooming_and_panning/pinch_zooming.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Selection zooming",
                    "key": "selection_zooming",
                    "description": "This sample depicts the working of selection zooming. Long press and drag on the chart to select the region for zooming.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/zooming_and_panning/selection_zooming.dart"
                  },
                  {
                    "title": "시간별 에너지 사용량 추이",
                    "key": "zooming_with_custom_buttons",
                    "description": "This sample demonstrates zooming and panning with custom buttons.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/zooming_and_panning/zooming_with_custom_buttons.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Crosshair",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Chart with crosshair",
                    "key": "chart_with_crosshair",
                    "description": "The crosshair is enabled in this sample. Tap the chart to show the crosshair and drag the chart to constantly change the crosshair position. On the web, you can move the cursor over the chart area to display the crosshair.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/crosshair.dart",
                    "needsPropertyPanel": true
                  }
                ]
              },
              {
                "type": "child",
                "title": "Trackball",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Chart with trackball",
                    "key": "chart_with_trackball",
                    "description": "The trackball is enabled in this sample. Tap the chart to show the trackball and drag the chart to change the position of the trackball continuously. On the web, you can move the cursor over the chart area to display the trackball.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/trackball/chart_with_trackball.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Customized trackball",
                    "key": "chart_with_trackball_template",
                    "description": "This example displays a custom widget as the trackball. To see the customized trackball, tap the chart area in mobile and hover the chart area on the web.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/trackball/customized_trackball.dart",
                    "needsPropertyPanel": true
                  }
                ]
              },
              {
                "type": "child",
                "title": "Selection",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Selection modes",
                    "key": "selection_modes",
                    "status": "Updated",
                    "description": "This sample depicts the selection feature in the chart. In mobile, tap the data points and on web/desktop click the data points to select or deselect them.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/selection/selection_modes.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Dynamic selection",
                    "key": "selection_index",
                    "description": "This sample depicts the dynamic selection feature achieved using the 'selectDataPoints' public method. Choose the series and point index from the dropdown to select or unselect the data points.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/selection/dynamic_selection.dart",
                    "needsPropertyPanel": true
                  }
                ]
              },
              {
                "type": "child",
                "title": "Events",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Data point events",
                    "key": "data_points",
                    "status": "New",
                    "description": "Tap on a data point to display additional information in the snack bar. Double-tap on it to navigate to that site and long press on it to get the sorting options. This is achieved by using the onPointTap, onPointDoubleTap and onPointLongPress callbacks.",
                    "codeLink": " https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/events/data_point_events.dart"
                  },
                  {
                    "title": "Events",
                    "key": "events",
                    "description": "Various chart callbacks are enabled in this example. It displays the event trace details while rendering and on performing various interactions.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/events/events.dart"
                  },
                  {
                    "title": "Navigation with events",
                    "key": "navigate_with_events",
                    "description": "Tap/click on the axis labels, data points or on the data labels for navigating to an external link.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/events/navigation_with_events.dart",
                    "sourceLink": "https://www.emporis.com/statistics/worlds-tallest-buildings",
                    "sourceText": "www.emporis.com"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Add a point on click",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Add a point on click",
                    "description": "This example depicts the pixel to data point conversion feature. Tap/click on the chart area to add a data point dynamically on that location.",
                    "key": "chart_interactivity",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/add_point_on_click.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Pagination",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Pagination",
                    "key": "pagination",
                    "description": "This sample shows how to view the next set of data on swiping the chart using the 'onPlotAreaSwipe' callback function. You can swipe from left to right or vice versa and also click on the days at the bottom to view the next set of data.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/pagination.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Auto Scrolling",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Auto Scrolling",
                    "description": "In this sample, the data is being added every second. The chart is scrolled to the end automatically to view the current data and you can pan the chart from left to right direction to view the previous data points.",
                    "key": "auto_scrolling",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/auto_scrolling.dart"
                  }
                ]
              }
            ]
          },
          {
            "type": "child",
            "title": "Trendlines",
            "displayType": "card",
            "subItems": [
              {
                "title": "Default rendering",
                "key": "default_trendlines_with_options",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/trendline/default_trendline.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Trendline forecast",
                "key": "trendline_forecast_with_options",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/trendline/trendline_forecast.dart",
                "sourceLink": "https://www.ofx.com/en-au/forex-news/historical-exchange-rates/yearly-average-rates/",
                "sourceText": "www.ofx.com",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "child",
            "title": "Technical Indicators",
            "displayType": "card",
            "subItems": [
              {
                "title": "Accumulation Distribution",
                "key": "accumulation_distribution",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/accumulation_distribution.dart"
              },
              {
                "title": "ATR Indicator",
                "key": "atr_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/atr_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Bollinger Indicator",
                "key": "bollinger_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/bollinger_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "EMA Indicator",
                "key": "ema_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/ema_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Momentum Indicator",
                "key": "momentum_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/momentum_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "RSI Indicator",
                "key": "rsi_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/rsi_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "SMA Indicator",
                "key": "sma_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/sma_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Stochastic Indicator",
                "key": "stochastic_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/stochastic_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "TMA Indicator",
                "key": "tma_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/tma_indicator.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "MACD Indicator",
                "key": "macd_indicator",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/technical_indicators/macd_indicator.dart",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "parent",
            "title": "Real-time Charts",
            "subItems": [
              {
                "type": "child",
                "title": "Live Updates",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Real-time spline chart",
                    "key": "real_time_spline_chart",
                    "description": "This sample demonstrates the live chart. A new data point is added at the end and a point is removed at the start in certain time interval continuously.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/live_update/real_time_spline_chart.dart"
                  },
                  {
                    "title": "Real-time line chart",
                    "key": "real_time_line_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/live_update/real_time_line_chart.dart"
                  },
                  {
                    "title": "Vertical live chart",
                    "key": "vertical_live_chart",
                    "description": "This sample demonstrates the live chart. A new data point is added at the end  in certain time interval continuously.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/live_update/vertical_live_chart.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Add Data Points",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Programmatic",
                    "key": "add_remove_points",
                    "description": "Add or remove the data points from a chart using the buttons placed in the sample.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/add_remove_data/add_remove_points.dart"
                  },
                  {
                    "title": "Interaction",
                    "description": "This example depicts the pixel to data point conversion feature. Tap/click on the chart area to add a data point dynamically on that location.",
                    "key": "chart_interactivity",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/user_interactions/add_point_on_click.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Add/Remove Series",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Add/remove series",
                    "key": "add_remove_series",
                    "description": "Add or remove series from the chart using the buttons placed in the sample.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/add_remove_data/add_remove_series.dart"
                  }
                ]
              },
              {
                "type": "child",
                "title": "Update Data Source",
                "displayType": "tab",
                "subItems": [
                  {
                    "title": "Update data source",
                    "key": "update_data_source",
                    "description": "The data source bound to this chart can be changed with random values dynamically, by tapping the button placed in this sample.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/cartesian_charts/real_time_charts/update_data_source.dart"
                  }
                ]
              }
            ]
          }

        ]
      },
      {
        "title": "Circular Charts",
        "status": "Updated",
        "description": "Visualize the data using pie, doughnut, and radial bar charts",
        "image": "images/circle_series.png",
        "controlId": 2,
        "subItems": [
          {
            "type": "parent",
            "title": "Chart Types",
            "subItems": [
              {
                "type": "child",
                "title": "Pie",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Default",
                    "key": "default_pie_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/default_pie_chart.dart"
                  },
                  {
                    "title": "Pie with various radius",
                    "key": "pie_with_various_radius",
                    "description": "This sample demonstrates the pie chart with different radius for all the slices. The radius of a slice is based on a numeric value.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/pie_with_various_radius.dart"
                  },
                  {
                    "title": "Semi-pie chart",
                    "key": "semi_pie_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/semi_pie_chart.dart",
                    "sourceLink": "https://data.worldbank.org/indicator/sp.rur.totl.zs",
                    "sourceText": "data.worldbank.org",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Grouping",
                    "key": "pie_with_grouping",
                    "description": "This sample demonstrates the grouping functionality in the pie chart. Data points whose values are less than the specified value will be grouped together",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/pie_with_grouping.dart"
                  },
                  {
                    "title": "Smart labels",
                    "key": "pie_with_smart_labels",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/pie_with_smart_labels.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Gradient fill",
                    "key": "pie_with_gradient",
                    "description": "This sample demonstrates how to apply different types of gradient to the pie slices. Here you can apply the linear, sweep, and radial gradients using the dropdown menu in the property panel.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/pie_with_gradient.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Image fill",
                    "key": "pie_with_imageShader",
                    "description": "This sample demonstrates how to fill the pie slices with various images for each slice using the 'ImageShader'.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/pie_with_image.dart"
                  },
                  {
                    "title": "Point render mode",
                    "key": "pie_point_render_mode",
                    "description": "This sample demonstrates how to fill the pie slices with various images for each slice using the 'ImageShader'.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/pie/point_render_mode.dart",
                    "needsPropertyPanel": true
                  }
                ]
              },
              {
                "type": "child",
                "title": "Doughnut",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Default",
                    "key": "default_doughnut_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/default_doughnut_chart.dart",
                    "sourceLink": "https://www.pngkit.com/view/u2q8y3w7r5y3t4o0_composition-of-ocean-water-earths-oceans-elements-percentage/",
                    "sourceText": "www.pngkit.com"
                  },
                  {
                    "title": "Center elevation",
                    "key": "doughnut_with_center_elevation",
                    "description": "The doughnut chart is rendered with elevated circle at the center using annotations feature in this sample.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/doughnut_with_center_elevation.dart"
                  },
                  {
                    "title": "Rounded corners",
                    "key": "doughnut_with_rounded_corners",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/doughnut_with_rounded_corners.dart"
                  },
                  {
                    "title": "Color mapping",
                    "key": "doughnut_with_color_mapping",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/doughnut_with_color_mapping.dart"
                  },
                  {
                    "title": "Semi-doughnut chart",
                    "key": "semi_doughnut_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/semi_doughnut_chart.dart",
                    "needsPropertyPanel": true
                  },
                  {
                    "title": "Gradient fill",
                    "key": "doughnut_with_gradient",
                    "description": "This sample demonstrates how to apply different types of gradient to the doughnut slices. Here you can apply the linear, sweep, and radial gradients using the dropdown menu in the property panel.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/doughnut/doughnut_with_gradient.dart",
                    "needsPropertyPanel": true
                  }
                ]
              },
              {
                "type": "child",
                "title": "Radial Bar",
                "displayType": "card",
                "subItems": [
                  {
                    "title": "Default",
                    "key": "default_radialbar_chart",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/radial_bar/default_radial_bar_chart.dart"
                  },
                  {
                    "title": "Legend",
                    "key": "radialbar_with_legend",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/radial_bar/radial_bar_with_legend.dart"
                  },
                  {
                    "title": "Customized radial bar chart",
                    "key": "customized_radialbar_chart",
                    "description": "This sample renders the radial bar chart with annotation at the center and templated legend.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/radial_bar/customized_radial_bar_chart.dart"
                  },
                  {
                    "title": "Gradient fill",
                    "key": "radialbar_with_gradient",
                    "description": "This sample renders the radial bar chart with gradient.",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/radial_bar/radial_bar_with_gradient.dart"
                  },
                  {
                    "title": "Overfilled radial bar",
                    "key": "overfilled_radialbar",
                    "status": "New",
                    "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/chart_types/radial_bar/overfilled_radial_bar.dart"
                  }
                ]
              }
            ]
          },
          {
            "type": "child",
            "title": "Legend",
            "displayType": "card",
            "subItems": [
              {
                "title": "Chart with legend",
                "key": "chart_with_legend",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/legend/chart_with_legend.dart"
              },
              {
                "title": "Legend with various options",
                "key": "legend_with_various_options",
                "status": "Updated",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/legend/legend_with_various_options.dart",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "child",
            "title": "User Interactions",
            "displayType": "card",
            "subItems": [
              {
                "title": "Tooltip",
                "key": "pie_tooltip_position",
                "description": "By changing the options, the tooltip can be made to display in the fixed location or at the pointer location itself.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/user_interactions/tooltip.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Selection",
                "key": "circular_selection",
                "status": "Updated",
                "description": "This sample depicts the selection feature in the chart. In mobile, tap the data points and on web/desktop click the data points to select or deselect them.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/user_interactions/selection.dart",
                "needsPropertyPanel": true
              },
              {
                "title": "Dynamic selection",
                "key": "circular_dynamic_selection",
                "description": "This sample depicts the dynamic selection feature achieved using the 'selectDataPoints' public method. Choose the point index from the dropdown to select or unselect the data points.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/user_interactions/dynamic_selection.dart",
                "needsPropertyPanel": true
              }
            ]
          }

        ]
      }










    ]
  },


  {
    "categoryName": "Sliders",
    "mobileCategoryId": 6,
    "webCategoryId": 6,
    "controlList": [

      
      {
        "title": "Range Selector",
        "description": "Visualize data and select a date or numeric range",
        "image": "images/range_selector.png",
        "displayType": "tab",
        "controlId": 5,
        "subItems": [
          {
            "type": "sample",
            "title": "Default",
            "key": "range_selector_default_appearance",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_default_appearance.dart"
          },
          {
            "type": "sample",
            "title": "Selection",
            "key": "range_selector_with_selection",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_selection.dart"
          },
          {
            "type": "sample",
            "title": "Zooming",
            "key": "range_selector_with_zooming",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_zooming.dart",
            "needsPropertyPanel": true
          },
          {
            "type": "sample",
            "title": "Histogram Chart",
            "key": "range_selector_with_histogram_chart",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_histogram_chart.dart"
          },
          {
            "type": "sample",
            "title": "Bar Chart",
            "key": "range_selector_with_bar_chart",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_bar_chart.dart"
          }
        ]
      }


    ]

  },
  
  {
    "categoryName": "Signature 패드 2",
    "mobileCategoryId": 7,
    "webCategoryId": 7,
    "controlList": [
      {
        "title": "Range Selector",
        "description": "Visualize data and select a date or numeric range",
        "image": "images/range_selector.png",
        "displayType": "tab",
        "controlId": 5,
        "subItems": [
          {
            "type": "sample",
            "title": "Default",
            "key": "range_selector_default_appearance",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_default_appearance.dart"
          },
          {
            "type": "sample",
            "title": "Selection",
            "key": "range_selector_with_selection",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_selection.dart"
          },
          {
            "type": "sample",
            "title": "Zooming",
            "key": "range_selector_with_zooming",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_zooming.dart",
            "needsPropertyPanel": true
          },
          {
            "type": "sample",
            "title": "Histogram Chart",
            "key": "range_selector_with_histogram_chart",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_histogram_chart.dart"
          },
          {
            "type": "sample",
            "title": "Bar Chart",
            "key": "range_selector_with_bar_chart",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_bar_chart.dart"
          }
        ]
      }
    ]
  },
  {
    "categoryName": "Energy Manger Chart",
    "mobileCategoryId": 7,
    "webCategoryId": 7,
    "controlList": [
      {
        "title": "Time&Energy chart",
        "description": "시간별 에너지 차트",
        "image": "images/range_selector.png",
        "displayType": "tab",
        "controlId": 1,
        "subItems": [
          {
            "type": "sample",
            "title": "Zooming",
            "key": "range_selector_with_zooming",
            "codeLink": "https://github.com/syncfusion/flutter-examples/tree/master/lib/samples/sliders/range_selector/range_selector_with_zooming.dart",
            "needsPropertyPanel": true
          }
        ]
      }
    ]
  },
  {
    "categoryName": "Chart by Machine",
    "mobileCategoryId": 7,
    "webCategoryId": 7,
    "controlList": [
      {
        "title": "Energy Value by Machine",
        "description": "기기 별 에너지 사용량 비교",
        "image": "images/circle_series.png",
        "displayType": "tab",
        "controlId": 1,
        "subItems": [
          {
            "type": "child",
            "title": "Legend",
            "displayType": "card",
            "subItems": [
              {
                "title": "기기별 전력 사용량",
                "key": "chart_with_legend",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/legend/chart_with_legend.dart"
              },
              {
                "title": "Legend with various options",
                "key": "legend_with_various_options",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/legend/legend_with_various_options.dart",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "child",
            "title": "Exporting",
            "displayType": "tab",
            "platformsToHide": [
              "linux",
              "macOS",
              "windows",
              "web"
            ],
            "subItems": [
              {
                "title": "Export",
                "key": "export_circular_chart",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/chart/circular_charts/export.dart",
                "platformsToHide": [
                  "linux",
                  "macOS",
                  "windows",
                  "web"
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "categoryName": "User ID",
    "mobileCategoryId": 9,
    "webCategoryId": 9,
    "controlList": [
      {
        "title": "User ID information",
        "description": "사용자 계정 정보",
        "image": "images/Datagrid.png",
        "displayType": "tab",
        "controlId": 1,
        "subItems": [
          {
            "type": "child",
            "title": "Getting Started",
            "subItems": [
              {
                "type": "sample",
                "title": "Getting Started",
                "key": "getting_started_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/getting_started/datagrid_getting_started.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Data Source",
            "subItems": [
              {
                "type": "sample",
                "title": "List",
                "key": "list_data_source_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/data_source/datagrid_list_data_source.dart"
              },
              {
                "type": "sample",
                "title": "JSON",
                "key": "json_data_source_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/data_source/datagrid_json_data_source.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Columns",
            "subItems": [
              {
                "type": "sample",
                "title": "Column Types",
                "key": "column_types_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/columns/datagrid_column_types.dart"
              },
              {
                "type": "sample",
                "title": "Custom Header",
                "key": "custom_header_datagrid",
                "description": "In this sample, the dropdown icon is loaded along with the text to the header cell. If you click the header cell, the popup menu options will be shown. You can sort that specific column.",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/columns/datagrid_custom_header.dart"
              },
              {
                "type": "sample",
                "title": "Stacked Header",
                "key": "stacked_header_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/columns/datagrid_stacked_header.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Editing",
            "subItems": [
              {
                "type": "sample",
                "title": "Editing",
                "key": "editing_datagrid",
                "status": "New",
                "needsPropertyPanel": true,
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/editing/datagrid_editing.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Sorting",
            "subItems": [
              {
                "type": "sample",
                "title": "Sorting",
                "description": "This sample demonstrates how to sort one or more columns. In the Web and Desktop platforms, you can sort multiple columns by tapping the column header with the CTRL key where as in a mobile platform you can tap the column headers. It also provides some additional functionalities like Tri-state sorting and displaying sort numbers that indicate the sort order.",
                "key": "sorting_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/sorting/datagrid_sorting.dart",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "child",
            "title": "Selection",
            "subItems": [
              {
                "type": "sample",
                "title": "Selection",
                "key": "selection_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/selection/datagrid_selection.dart",
                "needsPropertyPanel": true
              }
            ]
          },
          {
            "type": "child",
            "title": "Freeze Panes",
            "subItems": [
              {
                "type": "sample",
                "title": "Freeze Panes",
                "key": "freeze_panes_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/freeze_panes/datagrid_freeze_panes.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Row Height",
            "subItems": [
              {
                "type": "sample",
                "title": "Row Height",
                "key": "row_height_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/row_height/datagrid_row_height.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Appearance",
            "subItems": [
              {
                "type": "sample",
                "title": "Styling",
                "key": "styling_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/apperance/styling/datagrid_styling.dart",
                "needsPropertyPanel": true
              },
              {
                "type": "sample",
                "title": "Conditional Styling",
                "key": "conditional_styling_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/apperance/conditional_styling/datagrid_conditional_styling.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Load More Behavior",
            "subItems": [
              {
                "type": "sample",
                "title": "Infinite Scrolling",
                "key": "load_more_infinite_scrolling_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/loadmore/datagrid_infinite_scrolling.dart"
              },
              {
                "type": "sample",
                "title": "Load More",
                "key": "load_more_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/loadmore/datagrid_load_more.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Pull To Refresh",
            "subItems": [
              {
                "type": "sample",
                "title": "Pull To Refresh",
                "key": "pull_to_refresh_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/pull_to_refresh/datagrid_pull_to_refresh.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Paging",
            "subItems": [
              {
                "type": "sample",
                "title": "Paging",
                "key": "paging_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/paging/datagrid_paging.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Swiping",
            "subItems": [
              {
                "type": "sample",
                "title": "Swiping",
                "key": "swiping_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/swiping/datagrid_swiping.dart"
              }
            ]
          },
          {
            "type": "child",
            "title": "Real-Time Update",
            "subItems": [
              {
                "type": "sample",
                "title": "Real-Time Update",
                "key": "real_time_update_datagrid",
                "codeLink": "https://github.com/syncfusion/flutter-examples/blob/master/lib/samples/datagrid/real_time_update/datagrid_real_time_update.dart"
              }
            ]
          }
        ]
      }
    ]
  }
]
